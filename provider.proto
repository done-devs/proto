syntax = "proto3";

option go_package = "./provider";

package provider;

import "google/protobuf/wrappers.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";

service Provider {
    rpc GetTask (google.protobuf.StringValue) returns (Response);
    rpc GetTasks (google.protobuf.Empty) returns (stream Response);
    rpc CreateTask (Task) returns (Response);
    rpc UpdateTask (Task) returns (Response);
    rpc DeleteTask (google.protobuf.StringValue) returns (Response);

    rpc GetList (google.protobuf.StringValue) returns (Response);
    rpc GetLists (google.protobuf.Empty) returns (stream Response);
    rpc GetListIds (google.protobuf.Empty) returns (Response);
    rpc CreateList (List) returns (Response);
    rpc UpdateList (List) returns (Response);
    rpc DeleteList (google.protobuf.StringValue) returns (Response);
    rpc GetTasksFromList(google.protobuf.StringValue) returns (stream Response);
    rpc GetTaskIdsFromList(google.protobuf.StringValue) returns (Response);
    rpc GetTaskCountFromList(google.protobuf.StringValue) returns (Response);
}

message Response {
    bool successful = 1;
    string message = 2;
    int64 count = 3;
    optional google.protobuf.Value value = 4;
}

message Task {
    string id = 1;
    string parent = 2;
    string title = 3;
    bool favorite = 4;
    bool today = 5;
    bool is_reminder_on = 6;
    Status status = 7;
    Priority priority = 8;
    repeated SubTask sub_tasks = 9;
    repeated string tags = 10;
    optional string notes = 11;
    optional int64 completion_date = 12;
    optional int64 deletion_date = 13;
    optional int64 due_date = 14;
    optional int64 reminder_date = 15;
    optional int64 reminder_time = 16;
    optional string recurrence = 17;
    int64 created_date_time = 18;
    int64 last_modified_date_time = 19;
}

message SubTask {
    string title = 1;
    bool completed = 2;
}

message List {
    string id = 1;
    string name = 2;
    optional string icon = 5;
}

enum Priority {
    LOW = 0;
    NORMAL = 1;
    HIGH = 2;
}

enum Status {
    NOT_STARTED = 0;
    COMPLETED = 1;
}
